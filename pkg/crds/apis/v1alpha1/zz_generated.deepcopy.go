//go:build !ignore_autogenerated
// +build !ignore_autogenerated

// Copyright 2023 The Kelemetry Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by deepcopy-gen. DO NOT EDIT.

package v1alpha1

import (
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkRule) DeepCopyInto(out *LinkRule) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.SourceFilter.DeepCopyInto(&out.SourceFilter)
	if in.TargetTemplates != nil {
		in, out := &in.TargetTemplates, &out.TargetTemplates
		*out = make([]LinkRuleTargetTemplate, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	out.Link = in.Link
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkRule.
func (in *LinkRule) DeepCopy() *LinkRule {
	if in == nil {
		return nil
	}
	out := new(LinkRule)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkRule) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkRuleLink) DeepCopyInto(out *LinkRuleLink) {
	*out = *in
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkRuleLink.
func (in *LinkRuleLink) DeepCopy() *LinkRuleLink {
	if in == nil {
		return nil
	}
	out := new(LinkRuleLink)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkRuleList) DeepCopyInto(out *LinkRuleList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]LinkRule, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkRuleList.
func (in *LinkRuleList) DeepCopy() *LinkRuleList {
	if in == nil {
		return nil
	}
	out := new(LinkRuleList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *LinkRuleList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkRuleSourceFilter) DeepCopyInto(out *LinkRuleSourceFilter) {
	*out = *in
	if in.Resources != nil {
		in, out := &in.Resources, &out.Resources
		*out = new([]v1.GroupResource)
		if **in != nil {
			in, out := *in, *out
			*out = make([]v1.GroupResource, len(*in))
			copy(*out, *in)
		}
	}
	in.Selector.DeepCopyInto(&out.Selector)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkRuleSourceFilter.
func (in *LinkRuleSourceFilter) DeepCopy() *LinkRuleSourceFilter {
	if in == nil {
		return nil
	}
	out := new(LinkRuleSourceFilter)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *LinkRuleTargetTemplate) DeepCopyInto(out *LinkRuleTargetTemplate) {
	*out = *in
	in.Cluster.DeepCopyInto(&out.Cluster)
	in.Type.DeepCopyInto(&out.Type)
	in.Namespace.DeepCopyInto(&out.Namespace)
	in.Name.DeepCopyInto(&out.Name)
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new LinkRuleTargetTemplate.
func (in *LinkRuleTargetTemplate) DeepCopy() *LinkRuleTargetTemplate {
	if in == nil {
		return nil
	}
	out := new(LinkRuleTargetTemplate)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TextTemplate) DeepCopyInto(out *TextTemplate) {
	*out = *in
	if in.Literal != nil {
		in, out := &in.Literal, &out.Literal
		*out = new(string)
		**out = **in
	}
	return
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TextTemplate.
func (in *TextTemplate) DeepCopy() *TextTemplate {
	if in == nil {
		return nil
	}
	out := new(TextTemplate)
	in.DeepCopyInto(out)
	return out
}
